{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation Stack template creating a CI/CD Pipeline for Loan Amort Demo",
    "Parameters": {
        "paramECRRepository": {
            "Type": "String",
            "Default": "reponame:imagetag"
        },
        "paramCodeCommitRepository": {
            "Type": "String",
            "AllowedPattern": "^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$",
            "Default": "myreponame"
        }
    },
    "Resources": {
        "LoanAmortS3Bucket": {
            "Description": "An S3 bucket holding pipeline artifacts for Loan Amort Pipeline",
            "Type": "AWS::S3::Bucket",
             "DeletionPolicy": "Retain",
            "Properties": {
                "BucketName": {
                    "Fn::Sub": "${AWS::StackName}-s3bucket"
                },
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            }
        },
        "LoanAmortBuildProject": {
            "Type": "AWS::CodeBuild::Project",
            "DependsOn": [
                "LoanAmortS3Bucket",
                "CodeBuildRolePolicy"
            ],
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-LoanAmortBuild"
                },
                "Description": "Loan Amort Build",
                "ServiceRole": {
                    "Ref": "CodeBuildRole"
                },
                "Environment": {
                    "Type": "LINUX_CONTAINER",
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "Image": {
                        "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${paramECRRepository}"
                    }
                },
                "Source": {
                    "BuildSpec": "scripts/buildspec.yml",
                    "Type": "CODEPIPELINE"
                },
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "TimeoutInMinutes": 15
            }
        },
        "LoanAmortTestProject": {
            "Type": "AWS::CodeBuild::Project",
            "DependsOn": [
                "LoanAmortS3Bucket",
                "CodeBuildRolePolicy",
                "LoanAmortBuildProject"
            ],
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-LoanAmortTest"
                },
                "Description": "Loan Amort MFUnit Tests",
                "ServiceRole": {
                    "Ref": "CodeBuildRole"
                },
                "Environment": {
                    "Type": "LINUX_CONTAINER",
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "Image": {
                        "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${paramECRRepository}"
                    }
                },
                "Source": {
                    "BuildSpec": "scripts/buildspec_mfunit.yml",
                    "Type": "CODEPIPELINE"
                },
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "TimeoutInMinutes": 15
            }
        },
        "CodeBuildRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codebuild.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "CodeBuildRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": "CodeBuildRole",
            "Properties": {
                "PolicyName": "CodeBuildRolePolicy",
                "Roles": [
                    {
                        "Ref": "CodeBuildRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:s3:::${LoanAmortS3Bucket}*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codecommit:GitPull"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${paramCodeCommitRepository}"
                            }
                        }
                    ]
                }
            }
        },
        "CodePipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "codepipeline.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "CodePipelineRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": "CodePipelineRole",
            "Properties": {
                "PolicyName": "CodePipelineRolePolicy",
                "Roles": [
                    {
                        "Ref": "CodePipelineRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetBucketVersioning"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:s3:::${LoanAmortS3Bucket}*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codecommit:CancelUploadArchive",
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:UploadArchive"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${paramCodeCommitRepository}"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codebuild:BatchGetBuilds",
                                "codebuild:StartBuild"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:DeleteStack",
                                "cloudformation:DescribeStacks",
                                "cloudformation:UpdateStack",
                                "cloudformation:CreateChangeSet",
                                "cloudformation:DeleteChangeSet",
                                "cloudformation:DescribeChangeSet",
                                "cloudformation:ExecuteChangeSet",
                                "cloudformation:SetStackPolicy",
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:CreateRole",
                                "iam:DeleteRole",
                                "iam:GetRole",
                                "iam:PassRole",
                                "iam:AttachRolePolicy",
                                "iam:DetachRolePolicy",
                                "iam:DeleteRolePolicy",
                                "iam:PutRolePolicy"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:policy/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:sts::${AWS::AccountId}:assumed-role/*"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "CloudFormationRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "cloudformation.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "CloudFormationRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": "CloudFormationRole",
            "Properties": {
                "PolicyName": "CloudFormationRolePolicy",
                "Roles": [
                    {
                        "Ref": "CloudFormationRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetBucketVersioning"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:s3:::${LoanAmortS3Bucket}*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:CreateChangeSet"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:CreateApplication",
                                "codedeploy:DeleteApplication",
                                "codedeploy:RegisterApplicationRevision",
                                "codedeploy:GetApplicationRevision",
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetDeployment",
                                "codedeploy:GetDeploymentConfig",
                                "codedeploy:CreateDeploymentGroup",
                                "codedeploy:DeleteDeploymentGroup"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:CreateRole",
                                "iam:DeleteRole",
                                "iam:GetRole",
                                "iam:PassRole",
                                "iam:AttachRolePolicy",
                                "iam:DetachRolePolicy",
                                "iam:DeleteRolePolicy",
                                "iam:PutRolePolicy"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:policy/*"
                                },
                                {
                                    "Fn::Sub": "arn:aws:sts::${AWS::AccountId}:assumed-role/*"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "lambda:*"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "apigateway:*"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::*"
                            }
                        }
                    ]
                }
            }
        },
        "CloudWatchRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "events.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "CloudWatchRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": [
                "CloudWatchRole",
                "LoanAmortPipeline"
            ],
            "Properties": {
                "PolicyName": "CloudWatchRolePolicy",
                "Roles": [
                    {
                        "Ref": "CloudWatchRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codepipeline:StartPipelineExecution"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${LoanAmortPipeline}"
                            }
                        }
                    ]
                }
            }
        },
        "LoanAmortPipeline": {
            "Type": "AWS::CodePipeline::Pipeline",
            "DependsOn": [
                "LoanAmortS3Bucket",
                "CodeBuildRolePolicy",
                "CodePipelineRolePolicy",
                "CloudFormationRolePolicy",
                "LoanAmortBuildProject",
                "LoanAmortTestProject"
            ],
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-pipeline"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "CodePipelineRole",
                        "Arn"
                    ]
                },
                "ArtifactStore": {
                    "Type": "S3",
                    "Location": {
                        "Ref": "LoanAmortS3Bucket"
                    }
                },
                "Stages": [
                    {
                        "Name": "Repository",
                        "Actions": [
                            {
                                "Name": "Source",
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "AWS",
                                    "Provider": "CodeCommit",
                                    "Version": "1"
                                },
                                "RunOrder": 1,
                                "Configuration": {
                                    "BranchName": "master",
                                    "PollForSourceChanges": "false",
                                    "RepositoryName": {
                                        "Ref": "paramCodeCommitRepository"
                                    }
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "SourceArtifact"
                                    }
                                ],
                                "InputArtifacts": []
                            }
                        ]
                    },
                    {
                        "Name": "Build",
                        "Actions": [
                            {
                                "Name": "Compile",
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Provider": "CodeBuild",
                                    "Version": "1"
                                },
                                "RunOrder": 1,
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "LoanAmortBuildProject"
                                    }
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "BuildArtifact"
                                    }
                                ],
                                "InputArtifacts": [
                                    {
                                        "Name": "SourceArtifact"
                                    }
                                ]
                            },
                            {
                                "Name": "MFUnitTest",
                                "ActionTypeId": {
                                    "Category": "Test",
                                    "Owner": "AWS",
                                    "Provider": "CodeBuild",
                                    "Version": "1"
                                },
                                "RunOrder": 2,
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "LoanAmortTestProject"
                                    },
                                    "PrimarySource": "SourceArtifact"
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "TestArtifact"
                                    }
                                ],
                                "InputArtifacts": [
                                    {
                                        "Name": "SourceArtifact"
                                    },
                                    {
                                        "Name": "BuildArtifact"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "Name": "Deploy",
                        "Actions": [
                            {
                                "Name": "Package",
                                "ActionTypeId": {
                                    "Category": "Deploy",
                                    "Owner": "AWS",
                                    "Provider": "CloudFormation",
                                    "Version": "1"
                                },
                                "RunOrder": 1,
                                "Configuration": {
                                    "ActionMode": "CHANGE_SET_REPLACE",
                                    "StackName": {
                                        "Fn::Sub": "${AWS::StackName}-lambda"
                                    },
                                    "ChangeSetName": {
                                        "Fn::Sub": "${AWS::StackName}-changeset"
                                    },
                                    "TemplatePath": "SourceArtifact::scripts/serverless.yml",
                                    "Capabilities": "CAPABILITY_IAM",
                                    "ParameterOverrides": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "{ \"functionName\": \"",
                                                {
                                                    "Ref": "AWS::StackName"
                                                },
                                                "-lambda-LoanAmortFunction\", \"apiName\": \"",
                                                {
                                                    "Ref": "AWS::StackName"
                                                },
                                                "-lambda-LoanAmortAPI\", \"s3Key\":  {\"Fn::GetArtifactAtt\" : [\"BuildArtifact\", \"ObjectKey\"]}, \"s3Bucket\":  {\"Fn::GetArtifactAtt\" : [\"BuildArtifact\", \"BucketName\"]} }"
                                            ]
                                        ]
                                    },
                                    "RoleArn": {
                                        "Fn::GetAtt": [
                                            "CloudFormationRole",
                                            "Arn"
                                        ]
                                    }
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "SourceArtifact"
                                    },
                                    {
                                        "Name": "BuildArtifact"
                                    }
                                ],
                                "OutputArtifacts": []
                            },
                            {
                                "Name": "Deploy",
                                "ActionTypeId": {
                                    "Category": "Deploy",
                                    "Owner": "AWS",
                                    "Provider": "CloudFormation",
                                    "Version": "1"
                                },
                                "RunOrder": 2,
                                "Configuration": {
                                    "ActionMode": "CHANGE_SET_EXECUTE",
                                    "StackName": {
                                        "Fn::Sub": "${AWS::StackName}-lambda"
                                    },
                                    "ChangeSetName": {
                                        "Fn::Sub": "${AWS::StackName}-changeset"
                                    }
                                },
                                "OutputArtifacts": [],
                                "InputArtifacts": []
                            }
                        ]
                    }
                ]
            }
        },
        "CloudWatchEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": [
                "CloudWatchRole",
                "CloudWatchRolePolicy",
                "LoanAmortPipeline"
            ],
            "Properties": {
                "Description": "CloudWatch Event Rule to start piprline upon changes in CodeCommit repository",
                "EventPattern": {
                    "source": [
                        "aws.codecommit"
                    ],
                    "detail-type": [
                        "CodeCommit Repository State Change"
                    ],
                    "resources": [
                        {
                            "Fn::Sub": "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${paramCodeCommitRepository}"
                        }
                    ],
                    "detail": {
                        "event": [
                            "referenceCreated",
                            "referenceUpdated"
                        ],
                        "referenceType": [
                            "branch"
                        ],
                        "referenceName": [
                            "master"
                        ]
                    }
                },
                "Targets": [
                    {
                        "Arn": {
                            "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${LoanAmortPipeline}"
                        },
                        "RoleArn": {
                            "Fn::GetAtt": [
                                "CloudWatchRole",
                                "Arn"
                            ]
                        },
                        "Id": {
                            "Fn::Sub": "${AWS::StackName}-cloudwatchEventRule-${LoanAmortPipeline}"
                        }
                    }
                ]
            }
        }
    }
}