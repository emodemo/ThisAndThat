version: 0.2

env:
  variables:
    build_version: "0.1"

phases:
  install:
    commands:
      # install prerequisites
      - export M2_HOME=/opt/maven/apache-maven-3.5.4
      - export ANT_HOME=$(find $MFPRODBASE/remotedev/ant -type d -name 'apache-ant*')
      - export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$ANT_HOME/bin:$PATH
      - . $MFPRODBASE/bin/cobsetenv
    finally:
      # nothing special here 
  pre_build:
    commands:
  build:
    commands:
      # build and install cobol jvm project and cobol rts
      - ant -lib $COBDIR/lib/mfant.jar -f LoanAmort/build.xml
      - mvn -q install:install-file -Dfile=LoanAmort/dist/loanamort.jar -DgroupId=com.microfocus.loanamort -DartifactId=loanamort -Dversion=1.0.0 -Dpackaging=jar -DgeneratePom=true
      - mvn -q install:install-file -Dfile=$COBDIR/lib/mfcobolrts.jar -DgroupId=com.microfocus.cobol -DartifactId=mfcobolrts -Dversion=5.0.0 -Dpackaging=jar -DgeneratePom=true
      - mvn -q install:install-file -Dfile=$COBDIR/lib/mfcobol.jar -DgroupId=com.microfocus.cobol -DartifactId=mfcobol -Dversion=5.0.0 -Dpackaging=jar -DgeneratePom=true
      # build the lambda 
      - mvn -q -f AWSLambda/pom2.xml install -DskipTests
  post_build:
    commands:
      # copy class files and depencencies to main folder for packaging
      - mvn -q -f AWSLambda/pom2.xml dependency:copy-dependencies -DoutputDirectory=$PWD/lib
      - cd AWSLambda/target/classes
      - find . -name "*.class" | xargs cp --parents -t ../../../
artifacts:
  files:
      - lib/*
      - com/**/*