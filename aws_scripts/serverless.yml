# This script is executed during deployment stage of the pipeline
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: AWS CloudFormation script used to create Lambda Function and API gateway to access it.
# input parameters
Parameters:
  apiName:
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: LoanAmortApi
    Description: Name of the API gateway used to access the Lambda function.
    Type: String
  functionName:
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: LoanAmortFucntion
    Description: Name of the Lambda Function.
    Type: String
  s3Bucket:
    Type: String
    Description: S3 Bucket Name (e.g. mybucket).
  s3Key:
    Type: String
    Description: Path to the file containing the required source inside the bucket (e.g. mypipline/BuildArtifacts/myFnc.zip).
# resources declaration
Resources:
  # the lambda function
  lambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Ref: functionName
      Description: Loan Amort Lambda Function
      Handler: com.microfocus.loan.amort.lambda.CalculateLoanHandler
      Runtime: java8
      MemorySize: 512
      CodeUri:
        Bucket:
          Ref: s3Bucket
        Key:
          Ref: s3Key
      AutoPublishAlias: fncAlias
      DeploymentPreference:
        Type: AllAtOnce
      Timeout: 15
  # api gateway to access the lambda
  apiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Ref: apiName
      StageName: loanamort
      DefinitionBody:
        swagger: '2.0'
        info:
          title: apiGateway
          version: '2018-11-01T18:06:27Z'
        schemes:
        - https
        definitions:
          Empty:
            title: Empty Schema
            type: object
        paths:
          /:
            get:
              consumes:
              - application/json
              parameters:
              - in: query
                name: p
                required: true
                type: string
              - in: query
                name: t
                required: true
                type: string
              - in: query
                name: r
                required: true
                type: string
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_templates
                requestTemplates:
                  application/json: "{\r\n  \"principal\": \"$input.params('p')\"\
                    ,\r\n  \"term\": \"$input.params('t')\",\r\n  \"rate\": \"$input.params('r')\"\
                    \r\n}"
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: aws
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaFunction.Arn}:fncAlias/invocations
  # lambda - api gateway permissions
  permissions:
    Type: AWS::Lambda::Permission
    DependsOn: [ lambdaFunction, apiGateway, lambdaFunctionAliasfncAlias ]
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Join:
        - ''
        - - Ref: functionName
          - :fncAlias
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGateway}/*/GET/
# output parameters
Outputs:
  ApiAddress:
    Description: API address for accessing the Lambda Function
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: apiGateway
        - ".execute-api."
        - Ref: AWS::Region
        - ".amazonaws.com/loanamort"
